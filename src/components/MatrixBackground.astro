---
---

<canvas id="matrix-canvas" class="pointer-events-none fixed inset-0 -z-10 block h-dvh w-dvw"></canvas>

<script is:inline>
  const canvas = document.getElementById('matrix-canvas');
  const ctx = canvas.getContext('2d');

  const chars = '01ABCDEFGHJKLMNOPQRSTUVWXYZ0123456789';
  let fontSize = 14;
  let columns = 0;
  let drops = [];

  function resize() {
    const dpr = window.devicePixelRatio || 1;
    canvas.width = window.innerWidth * dpr;
    canvas.height = window.innerHeight * dpr;
    ctx.scale(dpr, dpr);
    fontSize = Math.max(12, Math.floor(window.innerWidth / 80));
    columns = Math.ceil(window.innerWidth / fontSize);
    drops = new Array(columns).fill(1 + Math.random() * 20);
    ctx.font = `${fontSize}px monospace`;
  }

  function draw() {
    // fade the canvas
    ctx.fillStyle = 'rgba(0, 0, 0, 0.07)';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    // draw red characters
    for (let i = 0; i < drops.length; i++) {
      const text = chars[Math.floor(Math.random() * chars.length)];
      ctx.fillStyle = 'rgba(220, 38, 38, 0.9)'; // red-600
      ctx.fillText(text, i * fontSize, drops[i] * fontSize);

      // reset drop
      if (drops[i] * fontSize > canvas.height || Math.random() > 0.975) {
        drops[i] = 0;
      }
      drops[i]++;
    }
    requestAnimationFrame(draw);
  }

  resize();
  draw();
  window.addEventListener('resize', () => {
    // throttle resize
    clearTimeout(window.__mtxResize);
    window.__mtxResize = setTimeout(resize, 150);
  });
</script> 